name: CI

on:
  push:
    branches:
      - main
      - "feature/**"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint (flake8/isort)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Cache pip download/artifacts to speed up pip install
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pip/wheels
          key: python-pip-cache-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            python-pip-cache-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linter (flake8 + isort check)
        # assume flake8 and isort are in requirements or dev-requirements
        run: |
          isort --check-only --diff .
          flake8 .

  test:
    name: Tests (pytest)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pip/wheels
          key: python-pip-cache-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            python-pip-cache-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

      - name: Upload pytest cache (optional)
        uses: actions/upload-artifact@v4
        if: failure() || always()
        with:
          name: pytest-cache
          path: .pytest_cache
